name: Release Workflows
concurrency:
  group: release-${{ github.head_ref }}
  cancel-in-progress: true
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - 'main'

jobs:
  tag_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all tags and branches
      - name: Extract branch name
        id: extractRelease
        run: |
          branch_ref=${{ github.ref }}
          branch_name=${branch_ref##*/}
          echo "name=$branch_name" >> $GITHUB_OUTPUT
          echo "Branch Name: $branch_name"
#      - name: Add release id to git note
#        run: |
#          git config user.email "${{ github.actor }}@users.noreply.github.com"
#          git config user.name "${{ github.actor }}"
#          git fetch origin refs/notes/commits:refs/notes/commits
#          git notes add -m "releaseId:${{ steps.create_release.outputs.id }}" -f
#          git notes show
#          git push origin refs/notes/commits:refs/notes/commits
      - name: Get the latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "Latest Tag: $latest_tag"

      - name: "Generate release changelog"
        id: changelog
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          headerLabel: ${{ steps.extractRelease.outputs.name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          sinceTag: ${{ env.latest_tag }}
      - name: Check if changelog has changes
        id: check_changes
        run: |
          if git diff --exit-code CHANGELOG.md; then
            echo "No changes in CHANGELOG.md"
            echo "skip_commit=true" >> $GITHUB_ENV
          else
            echo "Changes detected in CHANGELOG.md"
            echo "skip_commit=false" >> $GITHUB_ENV
          fi
      - name: Commit Changelog
        if: env.skip_commit == 'false'
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          git add CHANGELOG.md
          git commit -m "Update changelog"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push changes
        if: env.skip_commit == 'false'
        run: |
          git push origin HEAD:${{ github.head_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Find or create PR comment
        id: comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.comment.outputs.comment-id }}
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.changelog }}