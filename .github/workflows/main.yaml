name: Build and Deploy on Main Push x
on:
  push:
    branches:
      - test-release-concurrency
  workflow_dispatch:

jobs:
  build:
    concurrency:
      group: build
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  deploy-dev:
    concurrency:
      group: deploy-dev
      cancel-in-progress: true
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  deploy-stub:
    concurrency:
      group: deploy-stub
      cancel-in-progress: true
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  upload-s3-assets:
    concurrency:
      group: upload-s3-assets
      cancel-in-progress: true
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  deploy-stg:
    concurrency:
      group: deploy-stg
      cancel-in-progress: true
    needs: [upload-s3-assets]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  release-name:
    concurrency:
      group: release-name
      cancel-in-progress: true
    needs: [ deploy-stg ]
    outputs:
      name: ${{ steps.release.outputs.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  service-now:
    concurrency:
      group: service-now
      cancel-in-progress: true
    needs: [deploy-stg, upload-s3-assets, release-name]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  extract-pr-number:
    concurrency:
      group: extract-pr-number
      cancel-in-progress: false  # Ensures a deployment in progress is not interrupted
    needs: [service-now]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  jira-version-create:
    needs: [extract-pr-number, release-name]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  deploy-prd:
    concurrency:
      group: deploy-prd
      cancel-in-progress: false  # Ensures a deployment in progress is not interrupted
    needs: [service-now]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(600000);

  jira-version-update:
    needs: [ deploy-prd, jira-version-create ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  publish-release:
    needs: [deploy-prd, release-name]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  slack-notification:
    needs: [ publish-release, release-name ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  wiki-page-create:
    needs: [ release-name, jira-version-update ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  newrelic-deployment-marker:
    needs: [publish-release, release-name]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds

  newrelic-deployment-marker-lighthouse-checks:
    needs: [publish-release, release-name]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pause for 30 seconds
        uses: actions/github-script@v6
        with:
          script: |
            const wait = ms => new Promise(resolve => setTimeout(resolve, ms));
            await wait(30000); // 30 seconds